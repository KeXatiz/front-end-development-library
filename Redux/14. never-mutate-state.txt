const ADD_TO_DO = 'ADD_TO_DO';

// A list of strings representing tasks to do:
const todos = [
  'Go to the store',
  'Clean the house',
  'Cook dinner',
  'Learn to code',
];

const immutableReducer = (state = todos, action) => {
  switch(action.type) {
    case ADD_TO_DO:
      // Don't mutate state here or the tests will fail
      // return state.concat(action.todo);
      return [...state, action.todo]
    default:
      return state;
  }
};

const addToDo = (todo) => {
  return {
    type: ADD_TO_DO,
    todo
  }
}

const store = Redux.createStore(immutableReducer);



//this is just testing the result
// console.log(todos);

// store.dispatch(addToDo("This is testing"));
// console.log(store.getState());

//note: https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-never-mutate-state/301445


/*note: In other words, calling addToDo('Buy groceries') would return an action object like this:
{
  type: 'ADD_TO_DO',
  todo: 'Buy groceries'
} 
*/