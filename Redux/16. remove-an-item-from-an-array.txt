const immutableReducer = (state = [0,1,2,3,4,5], action) => {
  switch(action.type) {
    case 'REMOVE_ITEM':
      // Don't mutate state here or the tests will fail
      return [...state.slice(0, action.index), ...state.slice(action.index+1)];
      //what it does [first,second]. the first is copy and second is newly added so base on this let say we removeItem(2) the first will 0,1 and then the second will added the 2+1 which is 3 : 3,4,5 

    default:
      return state;
  }
};

const removeItem = (index) => {
  return {
    type: 'REMOVE_ITEM',
    index
  }
}

const store = Redux.createStore(immutableReducer);


//testing
// console.log(store.getState());

// store.dispatch(removeItem(2));
// console.log(store.getState());